x00 = float(input())
x01 = float(input())
x02 = float(input())
x03 = float(input())
x04 = float(input())
x05 = float(input())
x06 = float(input())
x07 = float(input())
x08 = float(input())
x09 = float(input())
x010 = float(input())
x011 = float(input())
x012 = float(input())
x013 = float(input())
x014 = float(input())
x015 = float(input())
x016 = float(input())
x017 = float(input())
x018 = float(input())
x019 = float(input())
x020 = float(input())
x021 = float(input())
x022 = float(input())

assume(0 <= x00 <= 1 and 0 <= x01 <= 1 and 0 <= x02 <= 1 and 0 <= x03 <= 1 and 0 <= x04 <= 1 and 0 <= x05 <= 1 and 0 <= x06 <= 1 and 0 <= x07 <= 1 and 0 <= x08 <= 1 and 0 <= x09 <= 1 and 0 <= x010 <= 1 and 0 <= x011 <= 1 and 0 <= x012 <= 1 and 0 <= x013 <= 1 and 0 <= x014 <= 1 and 0 <= x015 <= 1 and 0 <= x016 <= 1 and 0 <= x017 <= 1 and 0 <= x018 <= 1 and 0 <= x019 <= 1 and 0 <= x020 <= 1 and 0 <= x021 <= 1 and 0 <= x022 <= 1)

x10 = (0.290296)*x00 + (-0.079634)*x01 + (-0.384805)*x02 + (0.120162)*x03 + (-0.117541)*x04 + (-0.040305)*x05 + (0.299952)*x06 + (0.335885)*x07 + (-0.168118)*x08 + (0.570458)*x09 + (0.506551)*x010 + (-0.314608)*x011 + (-0.006160)*x012 + (0.300959)*x013 + (-0.275393)*x014 + (-0.307721)*x015 + (0.041364)*x016 + (0.176476)*x017 + (0.255594)*x018 + (0.435886)*x019 + (0.559052)*x020 + (-0.666124)*x021 + (0.484721)*x022 + (0.031205)
x11 = (-0.219604)*x00 + (0.318820)*x01 + (0.173091)*x02 + (0.112992)*x03 + (0.792083)*x04 + (-0.703093)*x05 + (0.154918)*x06 + (0.275641)*x07 + (0.106096)*x08 + (0.176051)*x09 + (-0.033024)*x010 + (-0.022831)*x011 + (-0.175420)*x012 + (0.112431)*x013 + (0.213448)*x014 + (0.249597)*x015 + (0.179752)*x016 + (0.342952)*x017 + (0.049090)*x018 + (-0.176699)*x019 + (0.385472)*x020 + (0.227759)*x021 + (-0.490292)*x022 + (0.201653)
x12 = (-0.426133)*x00 + (-0.218309)*x01 + (-0.188571)*x02 + (-0.082358)*x03 + (0.581779)*x04 + (-0.139432)*x05 + (0.399224)*x06 + (-0.052974)*x07 + (0.594685)*x08 + (0.373970)*x09 + (0.458882)*x010 + (-0.095518)*x011 + (0.295145)*x012 + (0.222890)*x013 + (-0.165291)*x014 + (-0.134954)*x015 + (0.239913)*x016 + (0.208068)*x017 + (0.249307)*x018 + (-0.045192)*x019 + (0.353235)*x020 + (0.261154)*x021 + (-0.735130)*x022 + (0.049638)
x13 = (0.079703)*x00 + (0.240665)*x01 + (0.069152)*x02 + (-0.349189)*x03 + (0.754298)*x04 + (-0.424253)*x05 + (0.532295)*x06 + (-0.035852)*x07 + (0.128426)*x08 + (0.046953)*x09 + (0.179894)*x010 + (0.235939)*x011 + (0.066240)*x012 + (0.277617)*x013 + (0.278908)*x014 + (0.063007)*x015 + (0.545426)*x016 + (-0.007088)*x017 + (0.363614)*x018 + (0.590003)*x019 + (0.054707)*x020 + (0.071715)*x021 + (-0.573699)*x022 + (0.104686)
x14 = (0.536173)*x00 + (0.275275)*x01 + (-0.132989)*x02 + (-0.057672)*x03 + (-0.287379)*x04 + (0.491713)*x05 + (0.009260)*x06 + (0.499333)*x07 + (0.098858)*x08 + (0.020159)*x09 + (-0.002772)*x010 + (-0.116336)*x011 + (-0.462880)*x012 + (0.261675)*x013 + (0.206330)*x014 + (0.049547)*x015 + (-0.192998)*x016 + (0.263500)*x017 + (0.178772)*x018 + (-0.053931)*x019 + (-0.346968)*x020 + (-0.264035)*x021 + (0.507737)*x022 + (0.140901)
#
ReLU(x10)
ReLU(x11)
ReLU(x12)
ReLU(x13)
ReLU(x14)

x20 = (0.686967)*x10 + (0.082224)*x11 + (0.703328)*x12 + (-0.183001)*x13 + (0.612752)*x14 + (0.109409)
x21 = (-0.873431)*x10 + (-0.478640)*x11 + (-0.753541)*x12 + (0.210859)*x13 + (0.455860)*x14 + (-0.043430)
x22 = (0.199611)*x10 + (0.902850)*x11 + (0.640377)*x12 + (0.621121)*x13 + (-0.469896)*x14 + (0.158600)
x23 = (-0.754566)*x10 + (-0.441921)*x11 + (-0.817014)*x12 + (-0.044219)*x13 + (0.418646)*x14 + (-0.027616)
x24 = (-0.459772)*x10 + (0.366250)*x11 + (0.134369)*x12 + (0.514631)*x13 + (0.418741)*x14 + (0.233922)
#
ReLU(x20)
ReLU(x21)
ReLU(x22)
ReLU(x23)
ReLU(x24)

x30 = (0.565852)*x20 + (-0.809908)*x21 + (0.326402)*x22 + (-0.089322)*x23 + (-0.306031)*x24 + (0.154265)
x31 = (-0.518854)*x20 + (0.367857)*x21 + (-0.636791)*x22 + (0.099968)*x23 + (0.102695)*x24 + (-0.053248)
x32 = (-0.499543)*x20 + (0.037827)*x21 + (0.884387)*x22 + (-0.737275)*x23 + (0.705816)*x24 + (0.203112)
x33 = (-0.469159)*x20 + (0.456036)*x21 + (-0.725302)*x22 + (-0.160841)*x23 + (-0.267832)*x24 + (0.000000)
x34 = (0.254054)*x20 + (-0.183049)*x21 + (-0.503172)*x22 + (0.754376)*x23 + (0.537388)*x24 + (0.176274)
#
ReLU(x30)
ReLU(x31)
ReLU(x32)
ReLU(x33)
ReLU(x34)

x40 = (-0.965951)*x30 + (0.418560)*x31 + (-0.832698)*x32 + (-0.481493)*x33 + (0.665025)*x34 + (0.024842)
x41 = (0.894545)*x30 + (0.729213)*x31 + (0.743118)*x32 + (0.263672)*x33 + (-0.846210)*x34 + (0.178162)
x42 = (-0.281091)*x30 + (0.596578)*x31 + (-0.666339)*x32 + (-0.734200)*x33 + (-0.167180)*x34 + (-0.002820)
x43 = (-0.698838)*x30 + (0.725216)*x31 + (-0.194946)*x32 + (-0.296257)*x33 + (-0.717499)*x34 + (0.009231)
x44 = (0.445819)*x30 + (0.572706)*x31 + (0.980836)*x32 + (-0.564811)*x33 + (-0.069808)*x34 + (0.080065)
#
ReLU(x40)
ReLU(x41)
ReLU(x42)
ReLU(x43)
ReLU(x44)

x50 = (-0.473259)*x40 + (0.635110)*x41 + (-0.492866)*x42 + (0.139280)*x43 + (0.313506)*x44 + (0.016969)
x51 = (1.044041)*x40 + (-0.528048)*x41 + (0.347325)*x42 + (-0.419699)*x43 + (-0.909657)*x44 + (-0.016969)
#
Softmax(x50)
Softmax(x51)


assume(x50 < x51)
