x: float = float(input())
y: float = float(input())

if x < 0 or y < 0 or x > 1 or y > 1:
  raise ValueError

x10: float = (-0.178603) * x + (-0.573958) * y + 0.000000
x11: float = 0.508969 * x + 0.300425 * y + 0.005142
x12: float = (-0.023885) * x + (-0.251936) * y + 0.000000
x13: float = 0.269558 * x + (-0.263770) * y + 0.029930
x14: float = (-0.298013) * x + (-0.371684) * y + 0.000000
x15: float = (-0.559951) * x + (-0.029127) * y + 0.000000
x16: float = (-0.478209) * x + 0.459975 * y + (-0.033703)
x17: float = 0.014423 * x + 0.087559 * y + (-0.014636)
x18: float = 0.214321 * x + 0.106542 * y + 0.035831
x19: float = 0.443130 * x + (-0.088009) * y + 0.035398
#
x10 = x10 if x10 > 0 else 0
x11 = x11 if x11 > 0 else 0
x12 = x12 if x12 > 0 else 0
x13 = x13 if x13 > 0 else 0
x14 = x14 if x14 > 0 else 0
x15 = x15 if x15 > 0 else 0
x16 = x16 if x16 > 0 else 0
x17 = x17 if x17 > 0 else 0
x18 = x18 if x18 > 0 else 0
x19 = x19 if x19 > 0 else 0

x20: float = 0.375535 * x10 + 0.044601 * x11 + (-0.190072) * x12 + 0.256139 * x13 + 0.283726 * x14 + 0.266623 * x15 + (-0.437568) * x16 + (-0.072192) * x17 + 0.061724 * x18 + (-0.291797) * x19 + 0.000000
x21: float = (-0.290986) * x10 + (-0.348922) * x11 + 0.454039 * x12 + 0.365997 * x13 + 0.227509 * x14 + 0.394680 * x15 + (-0.222747) * x16 + 0.303454 * x17 + (-0.382716) * x18 + 0.045321 * x19 + 0.000000
x22: float = 0.148797 * x10 + 0.239523 * x11 + (-0.163082) * x12 + 0.412528 * x13 + (-0.522169) * x14 + (-0.059842) * x15 + (-0.020826) * x16 + (-0.385827) * x17 + 0.238561 * x18 + 0.155865 * x19 + (-0.010882)
x23: float = (-0.289988) * x10 + (-0.401740) * x11 + (-0.035639) * x12 + (-0.116755) * x13 + (-0.510148) * x14 + 0.000408 * x15 + (-0.060451) * x16 + 0.026002 * x17 + 0.221935 * x18 + 0.136640 * x19 + 0.003162
x24: float = 0.360516 * x10 + (-0.034637) * x11 + 0.007164 * x12 + 0.172414 * x13 + (-0.189070) * x14 + 0.260231 * x15 + 0.435171 * x16 + 0.176529 * x17 + (-0.542169) * x18 + (-0.077442) * x19 + (-0.037990)
x25: float = 0.251187 * x10 + 0.524673 * x11 + 0.130834 * x12 + (-0.242579) * x13 + (-0.399595) * x14 + (-0.015130) * x15 + 0.428654 * x16 + 0.464028 * x17 + 0.249135 * x18 + 0.243005 * x19 + 0.008902
x26: float = (-0.337078) * x10 + (-0.179867) * x11 + 0.298234 * x12 + (-0.118707) * x13 + 0.395194 * x14 + (-0.171951) * x15 + (-0.244234) * x16 + 0.331689 * x17 + 0.296332 * x18 + 0.125788 * x19 + (-0.009697)
x27: float = (-0.191168) * x10 + 0.374007 * x11 + 0.127374 * x12 + 0.105263 * x13 + (-0.074447) * x14 + (-0.067812) * x15 + 0.182988 * x16 + 0.306171 * x17 + (-0.518916) * x18 + (-0.062547) * x19 + (-0.007831)
x28: float = 0.087767 * x10 + (-0.011870) * x11 + 0.009072 * x12 + 0.322598 * x13 + 0.017461 * x14 + 0.039639 * x15 + 0.045232 * x16 + (-0.151102) * x17 + (-0.132627) * x18 + 0.459829 * x19 + 0.016798
x29: float = (-0.491211) * x10 + 0.491752 * x11 + 0.405774 * x12 + (-0.464835) * x13 + 0.129093 * x14 + (-0.049419) * x15 + (-0.216235) * x16 + (-0.078473) * x17 + 0.047997 * x18 + 0.417676 * x19 + (-0.000334)
#
x20 = x20 if x20 > 0 else 0
x21 = x21 if x21 > 0 else 0
x22 = x22 if x22 > 0 else 0
x23 = x23 if x23 > 0 else 0
x24 = x24 if x24 > 0 else 0
x25 = x25 if x25 > 0 else 0
x26 = x26 if x26 > 0 else 0
x27 = x27 if x27 > 0 else 0
x28 = x28 if x28 > 0 else 0
x29 = x29 if x29 > 0 else 0

x30: float = (-0.101157) * x20 + (-0.495672) * x21 + (-0.025739) * x22 + (-0.481364) * x23 + (-0.384816) * x24 + 0.232633 * x25 + 0.497887 * x26 + 0.023692 * x27 + (-0.065407) * x28 + 0.082103 * x29 + 0.000949
x31: float = (-0.012320) * x20 + 0.224901 * x21 + 0.359354 * x22 + 0.199671 * x23 + (-0.249801) * x24 + 0.134128 * x25 + (-0.536513) * x26 + (-0.222413) * x27 + (-0.164286) * x28 + 0.382146 * x29 + (-0.000900)
x32: float = (-0.370582) * x20 + (-0.076963) * x21 + 0.061880 * x22 + (-0.463052) * x23 + (-0.162718) * x24 + (-0.294903) * x25 + 0.034310 * x26 + 0.086751 * x27 + (-0.505642) * x28 + 0.169549 * x29 + 0.000000
x33: float = (-0.279435) * x20 + (-0.478505) * x21 + (-0.212747) * x22 + (-0.164646) * x23 + (-0.290703) * x24 + (-0.066092) * x25 + (-0.508784) * x26 + 0.280446 * x27 + (-0.542677) * x28 + 0.241392 * x29 + (-0.015799)
x34: float = 0.413938 * x20 + 0.057893 * x21 + (-0.444183) * x22 + (-0.374910) * x23 + 0.097775 * x24 + 0.092730 * x25 + 0.421658 * x26 + 0.328465 * x27 + 0.195627 * x28 + 0.523157 * x29 + 0.006387
x35: float = (-0.250627) * x20 + (-0.096110) * x21 + 0.505861 * x22 + (-0.274802) * x23 + 0.526460 * x24 + (-0.296372) * x25 + (-0.251132) * x26 + 0.525171 * x27 + 0.553442 * x28 + 0.448754 * x29 + (-0.005120)
x36: float = 0.045077 * x20 + 0.427283 * x21 + (-0.126636) * x22 + (-0.181899) * x23 + (-0.340315) * x24 + (-0.492812) * x25 + (-0.104764) * x26 + 0.431291 * x27 + (-0.001365) * x28 + 0.192210 * x29 + 0.000000
x37: float = (-0.326908) * x20 + (-0.272064) * x21 + (-0.099622) * x22 + 0.451326 * x23 + (-0.532991) * x24 + 0.434077 * x25 + (-0.106246) * x26 + (-0.198289) * x27 + (-0.025741) * x28 + (-0.054066) * x29 + 0.005493
x38: float = 0.394136 * x20 + 0.415980 * x21 + (-0.415231) * x22 + (-0.368059) * x23 + (-0.289009) * x24 + 0.010994 * x25 + (-0.484917) * x26 + 0.364701 * x27 + (-0.181138) * x28 + (-0.237022) * x29 + (-0.003162)
x39: float = 0.454489 * x20 + 0.133282 * x21 + 0.209586 * x22 + 0.260303 * x23 + 0.500988 * x24 + 0.464588 * x25 + (-0.190138) * x26 + (-0.104452) * x27 + 0.235552 * x28 + 0.231567 * x29 + 0.003318
#
x30 = x30 if x30 > 0 else 0
x31 = x31 if x31 > 0 else 0
x32 = x32 if x32 > 0 else 0
x33 = x33 if x33 > 0 else 0
x34 = x34 if x34 > 0 else 0
x35 = x35 if x35 > 0 else 0
x36 = x36 if x36 > 0 else 0
x37 = x37 if x37 > 0 else 0
x38 = x38 if x38 > 0 else 0
x39 = x39 if x39 > 0 else 0

x40: float = (-0.290980) * x30 + 0.401598 * x31 + (-0.468682) * x32 + (-0.403286) * x33 + (-0.463951) * x34 + (-0.423818) * x35 + 0.090078 * x36 + (-0.135555) * x37 + (-0.340949) * x38 + 0.075212 * x39 + 0.000000
x41: float = 0.086888 * x30 + 0.018782 * x31 + 0.131158 * x32 + 0.033768 * x33 + 0.089794 * x34 + (-0.518498) * x35 + (-0.185024) * x36 + (-0.049399) * x37 + (-0.335854) * x38 + (-0.191672) * x39 + 0.000000
x42: float = (-0.308505) * x30 + 0.046650 * x31 + 0.355763 * x32 + (-0.526683) * x33 + (-0.544348) * x34 + 0.124773 * x35 + (-0.522646) * x36 + 0.259192 * x37 + (-0.370163) * x38 + (-0.014694) * x39 + 0.000000
x43: float = (-0.522883) * x30 + 0.538867 * x31 + 0.134002 * x32 + (-0.095872) * x33 + 0.083700 * x34 + (-0.380375) * x35 + (-0.401140) * x36 + (-0.026470) * x37 + 0.124858 * x38 + (-0.259913) * x39 + 0.000000
x44: float = (-0.537461) * x30 + (-0.464045) * x31 + 0.097398 * x32 + (-0.124419) * x33 + 0.075104 * x34 + 0.341757 * x35 + (-0.485708) * x36 + (-0.049883) * x37 + (-0.312626) * x38 + (-0.375284) * x39 + 0.000000
x45: float = (-0.267808) * x30 + 0.152563 * x31 + 0.207717 * x32 + 0.438637 * x33 + 0.317708 * x34 + (-0.019564) * x35 + (-0.395397) * x36 + 0.161377 * x37 + 0.107895 * x38 + (-0.012592) * x39 + 0.003318
x46: float = 0.000436 * x30 + 0.246708 * x31 + (-0.256723) * x32 + 0.169196 * x33 + 0.302363 * x34 + (-0.070535) * x35 + (-0.068440) * x36 + 0.437987 * x37 + (-0.496971) * x38 + (-0.032250) * x39 + 0.001657
x47: float = 0.290381 * x30 + (-0.306483) * x31 + (-0.298751) * x32 + (-0.033050) * x33 + 0.307279 * x34 + 0.095940 * x35 + (-0.386780) * x36 + (-0.023251) * x37 + (-0.385996) * x38 + (-0.012188) * x39 + (-0.007075)
x48: float = (-0.532855) * x30 + (-0.428364) * x31 + (-0.508731) * x32 + (-0.242822) * x33 + 0.481698 * x34 + 0.183889 * x35 + (-0.108224) * x36 + 0.506462 * x37 + 0.448305 * x38 + 0.223262 * x39 + (-0.000612)
x49: float = (-0.044196) * x30 + (-0.502872) * x31 + (-0.543966) * x32 + (-0.258862) * x33 + 0.036291 * x34 + 0.111433 * x35 + 0.052141 * x36 + (-0.132311) * x37 + (-0.363104) * x38 + 0.235263 * x39 + (-0.001853)
#
x40 = x40 if x40 > 0 else 0
x41 = x41 if x41 > 0 else 0
x42 = x42 if x42 > 0 else 0
x43 = x43 if x43 > 0 else 0
x44 = x44 if x44 > 0 else 0
x45 = x45 if x45 > 0 else 0
x46 = x46 if x46 > 0 else 0
x47 = x47 if x47 > 0 else 0
x48 = x48 if x48 > 0 else 0
x49 = x49 if x49 > 0 else 0

x50: float = 0.315669 * x40 + 0.136473 * x41 + (-0.015820) * x42 + (-0.355014) * x43 + 0.297869 * x44 + 0.498223 * x45 + 0.032320 * x46 + (-0.112257) * x47 + 0.014003 * x48 + (-0.488857) * x49 + 0.010071
x51: float = 0.239919 * x40 + (-0.393307) * x41 + 0.157988 * x42 + (-0.246341) * x43 + (-0.157326) * x44 + (-0.060242) * x45 + 0.203582 * x46 + (-0.241900) * x47 + (-0.420946) * x48 + 0.223870 * x49 + (-0.003162)
x52: float = 0.532620 * x40 + 0.119621 * x41 + (-0.028215) * x42 + 0.207259 * x43 + 0.210485 * x44 + (-0.082570) * x45 + 0.451361 * x46 + 0.543359 * x47 + (-0.086993) * x48 + (-0.410004) * x49 + (-0.002367)
x53: float = 0.241132 * x40 + (-0.486118) * x41 + 0.068264 * x42 + 0.241070 * x43 + 0.031399 * x44 + (-0.477991) * x45 + (-0.538125) * x46 + (-0.508833) * x47 + 0.545264 * x48 + 0.104377 * x49 + 0.002125
x54: float = 0.467904 * x40 + (-0.328867) * x41 + (-0.392462) * x42 + 0.463732 * x43 + (-0.394568) * x44 + (-0.257870) * x45 + 0.178002 * x46 + (-0.503104) * x47 + (-0.178812) * x48 + (-0.195021) * x49 + 0.000000
x55: float = (-0.438484) * x40 + (-0.474770) * x41 + 0.412248 * x42 + (-0.021092) * x43 + 0.424033 * x44 + (-0.041059) * x45 + (-0.219461) * x46 + 0.372581 * x47 + 0.152699 * x48 + (-0.429640) * x49 + (-0.003162)
x56: float = (-0.027211) * x40 + 0.214443 * x41 + 0.174279 * x42 + 0.246948 * x43 + 0.365477 * x44 + 0.174630 * x45 + 0.344583 * x46 + 0.197488 * x47 + (-0.309191) * x48 + 0.405301 * x49 + (-0.002212)
x57: float = 0.272051 * x40 + 0.072782 * x41 + (-0.300867) * x42 + (-0.388351) * x43 + (-0.031045) * x44 + 0.249362 * x45 + (-0.070725) * x46 + 0.386803 * x47 + 0.195559 * x48 + 0.402575 * x49 + 0.001296
x58: float = 0.444660 * x40 + (-0.541434) * x41 + (-0.414745) * x42 + 0.108938 * x43 + (-0.519948) * x44 + (-0.134384) * x45 + (-0.083182) * x46 + 0.204369 * x47 + 0.235228 * x48 + 0.178879 * x49 + 0.000952
x59: float = (-0.018577) * x40 + (-0.146764) * x41 + 0.502694 * x42 + (-0.360042) * x43 + 0.009464 * x44 + 0.382800 * x45 + (-0.245692) * x46 + 0.068989 * x47 + 0.449960 * x48 + 0.071008 * x49 + 0.004311
#
x50 = x50 if x50 > 0 else 0
x51 = x51 if x51 > 0 else 0
x52 = x52 if x52 > 0 else 0
x53 = x53 if x53 > 0 else 0
x54 = x54 if x54 > 0 else 0
x55 = x55 if x55 > 0 else 0
x56 = x56 if x56 > 0 else 0
x57 = x57 if x57 > 0 else 0
x58 = x58 if x58 > 0 else 0
x59 = x59 if x59 > 0 else 0

x60: float = (-0.169124) * x50 + (-0.528095) * x51 + 0.023324 * x52 + (-0.221758) * x53 + (-0.315623) * x54 + (-0.238362) * x55 + 0.692583 * x56 + (-0.378197) * x57 + 0.190977 * x58 + 0.219314 * x59 + (-0.002214)
x61: float = 0.228497 * x50 + (-0.667018) * x51 + (-0.677765) * x52 + (-0.443254) * x53 + (-0.492637) * x54 + 0.483552 * x55 + 0.255327 * x56 + (-0.254368) * x57 + (-0.178764) * x58 + 0.635816 * x59 + (-0.002964)
#
x60 = x60 if x60 > 0 else 0
x61 = x61 if x61 > 0 else 0

if x61 <= x60:
    raise ValueError
